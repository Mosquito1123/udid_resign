# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
ENV['MATCH_PASSWORD'] = '123456'
default_platform(:ios)

platform :ios do 
  desc "Description of what the lane does"
  lane :hello do |option|
    # add actions here: https://docs.fastlane.tools/actions
    if option[:username] and option[:bundleid]
       register_device(
         name: option[:devicename],
         udid: option[:udid],
         username: option[:username]
       )
      # sync_code_signing(
      #   type: "development", 
      #   readonly: false,
      #   app_identifier:[option[:bundleid]],
      #   username:option[:username],
      #   keychain_name:'login.keychain-db',
      #   keychain_password:'1234',
      #   # force:true,
      #   force_for_new_devices:true,
      #   skip_confirmation:true,
      #   skip_docs:true,
      #   git_full_name:'Mosquito1123',
      #   output_path:'/Users/elen/Desktop/udid_resign/tmp',
      #   template_name:'embedded'
      # )

      get_certificates(
        development: true,
#        force:true,
        username: option[:username],
        filename: "certificate.cer",
        output_path:'/srv/www/udid_resign/tmp'
    )
    get_provisioning_profile(
      development: true,
      force: true,
      app_identifier:option[:bundleid],
      username: option[:username],
      filename: "embedded.mobileprovision",
      output_path:'/srv/www/udid_resign/tmp'

    )
    import_certificate(
      certificate_path: "certificate.cer",
      certificate_password: ENV["CERTIFICATE_PASSWORD"] || "123456",
      keychain_name:'login.keychain-db'
    )
    install_provisioning_profile(path: "/srv/www/udid_resign/tmp/embedded.mobileprovision")

    end
  
  end
end
